let fruits=["apple","banana","orange","lemon"],vegetables=["tomato","potato","cucumber","corn","garlic"],cars=["Jeep","Toyota","BMW","Ford","Honda"],ages=[12,7,54,83,11,48,66,52,12,30,78,20,5,10,2,1],childrenAges=[5,8,12,10,7],name="Anahit",doubleAge=(console.log("____________ FOREACH ____________"),cars.forEach(_=>console.log(_)),console.log("____________ MAP ____________"),ages.map(_=>2*_)),canDrink=(console.log({doubleAge:doubleAge}),console.log("____________ FILTER ____________"),ages.filter(_=>21<_)),sumAges=(console.log({canDrink:canDrink}),console.log("____________ REDUCE ____________"),ages.reduce((_,o)=>_+o,0)),minToMaxAges=(console.log({sumAges:sumAges}),console.log("____________ SORT ____________"),ages.sort((_,o)=>_-o)),maxToMinAges=(console.log({minToMaxAges:minToMaxAges}),ages.sort((_,o)=>o-_)),citrus=(console.log({maxToMinAges:maxToMinAges}),console.log("____________ REVERSE ____________"),console.log("before changing => ",ages),ages.reverse(),console.log("after changing => ",ages),console.log("____________ PUSH ____________"),console.log("before changing => ",vegetables),vegetables.push("pumpkin"),console.log("after changing => ",vegetables),console.log("____________ POP ____________"),console.log("before changing => ",vegetables),vegetables.pop(),console.log("after changing => ",vegetables),console.log("____________ UNSHIFT ____________"),console.log("before changing => ",vegetables),vegetables.unshift("pumpkin"),console.log("after changing => ",vegetables),console.log("____________ SHIFT ____________"),console.log("before changing => ",vegetables),vegetables.shift(),console.log("after changing => ",vegetables),console.log("____________ SLICE ____________"),console.log({fruits:fruits}),fruits.slice(2,4)),canDrive=(console.log({citrus:citrus}),console.log("____________ SPLICE ____________"),console.log("before changing => ",fruits),fruits.splice(2,2),fruits.splice(2,0,"orange","lemon","kivi","mango"),console.log("after changing => ",fruits),console.log("____________ SOME ____________"),ages.some(_=>18<_)),isChildren=(console.log({canDrive:canDrive}),console.log("____________ EVERY ____________"),ages.every(_=>_<18)),whereIsBanana=(console.log({isChildren:isChildren}),console.log("____________ INDEXOF ____________"),fruits.indexOf("banana")),myFruits=(console.log({whereIsBanana:whereIsBanana}),console.log("____________ VALUEOF ____________"),fruits.valueOf()),thereIsMango=(console.log({myFruits:myFruits}),console.log("____________ INCLUDES ____________"),fruits.includes("mango")),getPairs=(console.log({thereIsMango:thereIsMango}),console.log("____________ INCLUDES ____________"),fruits.entries()),checkArray=(console.log("____________ ISARRAY ____________"),Array.isArray(cars)),carsList=(console.log({checkArray:checkArray}),console.log("____________ TOSTING ____________"),cars.toString()),joinCars=(console.log({carsList:carsList}),console.log("____________ JOIN ____________"),cars.join(" and ")),mergeArrays=(console.log({joinCars:joinCars}),console.log("____________ CONCAT ____________"),cars.concat(fruits));console.log({mergeArrays:mergeArrays});